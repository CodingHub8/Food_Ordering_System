package food_ordering_system.GUI;

import food_ordering_system.Controller.DeliveryRunnerController;
import food_ordering_system.Utilities.GraphPanel;
import food_ordering_system.Utilities.LoginRedirect;
import food_ordering_system.Utilities.Notifications;

import javax.swing.*;
import java.awt.*;
import java.util.List;

public class DeliveryRunnerDashboard extends javax.swing.JFrame {
    private String timestamp = "Days";//by default
    private GraphPanel graphPanel;
    private final DeliveryRunnerController runnerController = new DeliveryRunnerController();
    private List<Double> revenues;
    private String[] runnerDetail;
    private String runnerID;

    public DeliveryRunnerDashboard(String runnerID) {
        this.runnerID = runnerID;
        setTitle("Runner Interface");
        runnerDetail = runnerController.getRunnerDetails(runnerID);

        revenues = runnerController.getRevenues(runnerID, timestamp);
        graphPanel = new GraphPanel(revenues, "Revenue (RM)", timestamp);

        initComponents();
        lblRunnerID.setText("ID: " + runnerDetail[0]);
        lblRunnerName.setText("Name: " + runnerDetail[1]);

        txtReviews.setText("");
        txtReviews.append(runnerController.getReviews(runnerID));

        pnlGraph.add(graphPanel);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        new LoginRedirect().logout(this);
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        frmTaskManagement = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTasks = new javax.swing.JTable();
        frmTaskHistory = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaskHistory = new javax.swing.JTable();
        pnlDashboard = new javax.swing.JPanel();
        pnlGraph = new javax.swing.JPanel();
        pnlButton = new javax.swing.JPanel();
        btnDays = new javax.swing.JButton();
        btnWeeks = new javax.swing.JButton();
        btnMonths = new javax.swing.JButton();
        pnlNavigator = new javax.swing.JPanel();
        lblRunnerID = new javax.swing.JLabel();
        lblRunnerName = new javax.swing.JLabel();
        btnManageTasks = new javax.swing.JButton();
        btnTaskHistory = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        scrlPnlReviews = new javax.swing.JScrollPane();
        txtReviews = new javax.swing.JTextArea();

        frmTaskManagement.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                frmTaskManagementWindowOpened(evt);
            }
        });

        tblTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Order ID", "Runner ID", "Status", "Payment (RM)", "Location", "Timestamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTasks.setShowGrid(true);
        tblTasks.getTableHeader().setReorderingAllowed(false);
        tblTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTasksMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTasks);

        frmTaskManagement.getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        tblTaskHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task ID", "Order ID", "Runner ID", "Status", "Payment (RM)", "Location", "Timestamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTaskHistory.setShowGrid(true);
        tblTaskHistory.getTableHeader().setReorderingAllowed(false);
        tblTaskHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTaskHistoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTaskHistory);

        frmTaskHistory.getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1200, 400));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnlDashboard.setBackground(Color.decode("#500073"));
        pnlDashboard.setLayout(new java.awt.BorderLayout());

        pnlGraph.setBackground(Color.decode("#500073"));
        pnlGraph.setLayout(new javax.swing.BoxLayout(pnlGraph, javax.swing.BoxLayout.LINE_AXIS));
        pnlDashboard.add(pnlGraph, java.awt.BorderLayout.CENTER);

        pnlButton.setBackground(Color.decode("#500073"));

        btnDays.setText("Days");
        btnDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaysActionPerformed(evt);
            }
        });
        pnlButton.add(btnDays);

        btnWeeks.setText("Weeks");
        btnWeeks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeeksActionPerformed(evt);
            }
        });
        pnlButton.add(btnWeeks);

        btnMonths.setText("Months");
        btnMonths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthsActionPerformed(evt);
            }
        });
        pnlButton.add(btnMonths);

        pnlDashboard.add(pnlButton, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(pnlDashboard);

        pnlNavigator.setBackground(Color.decode("#500073"));
        pnlNavigator.setForeground(new java.awt.Color(255, 255, 255));
        java.awt.GridBagLayout pnlNavigatorLayout = new java.awt.GridBagLayout();
        pnlNavigatorLayout.columnWidths = new int[] {0};
        pnlNavigatorLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        pnlNavigator.setLayout(pnlNavigatorLayout);

        lblRunnerID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRunnerID.setForeground(new java.awt.Color(255, 255, 255));
        lblRunnerID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRunnerID.setText("ID: <Runner ID>");
        lblRunnerID.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        pnlNavigator.add(lblRunnerID, gridBagConstraints);

        lblRunnerName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblRunnerName.setForeground(new java.awt.Color(255, 255, 255));
        lblRunnerName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRunnerName.setText("Name: <Runner Name>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlNavigator.add(lblRunnerName, gridBagConstraints);

        btnManageTasks.setBackground(Color.decode("#F14A00"));
        btnManageTasks.setText("Manage Tasks");
        btnManageTasks.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnManageTasks.setMinimumSize(new java.awt.Dimension(140, 25));
        btnManageTasks.setPreferredSize(new java.awt.Dimension(140, 50));
        btnManageTasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageTasksActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        pnlNavigator.add(btnManageTasks, gridBagConstraints);

        btnTaskHistory.setBackground(Color.decode("#F14A00"));
        btnTaskHistory.setText("Check Task History");
        btnTaskHistory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTaskHistory.setMinimumSize(new java.awt.Dimension(140, 25));
        btnTaskHistory.setPreferredSize(new java.awt.Dimension(140, 50));
        btnTaskHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaskHistoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        pnlNavigator.add(btnTaskHistory, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        pnlNavigator.add(jSeparator1, gridBagConstraints);

        getContentPane().add(pnlNavigator);

        scrlPnlReviews.setBackground(Color.decode("#500073"));
        scrlPnlReviews.setPreferredSize(new java.awt.Dimension(400, 200));

        txtReviews.setEditable(false);
        txtReviews.setColumns(20);
        txtReviews.setRows(5);
        txtReviews.setText("Customer reviews will appear here\ne.g.\nC001: Fast delivery (4.2 rating)\nC002: Wowowowow (5.0 rating)\nC003: Slow delivery (2.3 rating)");
        txtReviews.setFocusable(false);
        scrlPnlReviews.setViewportView(txtReviews);

        getContentPane().add(scrlPnlReviews);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaysActionPerformed
        graphPanel.setxAxisLabel("Days");
        graphPanel.invalidate();
        graphPanel.repaint();
    }//GEN-LAST:event_btnDaysActionPerformed

    private void btnWeeksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeeksActionPerformed
        graphPanel.setxAxisLabel("Weeks");
        graphPanel.invalidate();
        graphPanel.repaint();
    }//GEN-LAST:event_btnWeeksActionPerformed

    private void btnMonthsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthsActionPerformed
        graphPanel.setxAxisLabel("Months");
        graphPanel.invalidate();
        graphPanel.repaint();
    }//GEN-LAST:event_btnMonthsActionPerformed

    private void btnManageTasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageTasksActionPerformed
        tblTasks.setModel(runnerController.loadData(runnerID, "Pending", "Delivering"));
        frmTaskManagement.setVisible(true);
        frmTaskManagement.setTitle("Manage Tasks");
        frmTaskManagement.setSize(new Dimension(600, 220));
        frmTaskManagement.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnManageTasksActionPerformed

    private void tblTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTasksMouseClicked
        // Add listener for cell edits
        int row = tblTasks.getSelectedRow();
        int col = tblTasks.getSelectedColumn();

        // Only handle clicks on the "Status" column
        if (col == 3) { // "Status" is column index 3
            String taskID = tblTasks.getValueAt(row, 0).toString(); // Get Task ID
            String custID = tblTasks.getValueAt(row, 1).toString();
            String currentStatus = tblTasks.getValueAt(row, col).toString().trim(); // Get current status

            if (currentStatus.equals("Pending")) {
                int choice = JOptionPane.showOptionDialog(
                    this,
                    "Update task status:",
                    "Task Status",
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    new Object[]{"Reject", "Accept"},
                    "Reject"
                );

                if (choice == 0) { // Reject
                    runnerController.updateTaskStatusInFile(taskID, "Rejected");
                    tblTasks.setValueAt("Rejected", row, col); // Update table
                    new Notifications().taskNotification(taskID, custID, "Rejected");
                } else if (choice == 1) { // Accept
                    runnerController.updateTaskStatusInFile(taskID, "Delivering");
                    tblTasks.setValueAt("Delivering", row, col); // Update table
                    new Notifications().taskNotification(taskID, custID, "Delivering");
                }
            } else if (currentStatus.equals("Delivering")) {
                int confirm = JOptionPane.showConfirmDialog(
                    this,
                    "Mark task as delivered?",
                    "Task Status",
                    JOptionPane.YES_NO_OPTION
                );

                if (confirm == JOptionPane.YES_OPTION) {
                    runnerController.updateTaskStatusInFile(taskID, "Complete");
                    tblTasks.setValueAt("Complete", row, col); // Update table
                    new Notifications().taskNotification(taskID, custID, "Complete");
                }
            }
            refreshTasksTable();
        }
    }//GEN-LAST:event_tblTasksMouseClicked

    private void refreshTasksTable() {
        tblTasks.setModel(runnerController.loadData(runnerID, "Pending", "Delivering"));
        tblTasks.revalidate();
        tblTasks.repaint();
    }
    
    private void frmTaskManagementWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_frmTaskManagementWindowOpened
        
    }//GEN-LAST:event_frmTaskManagementWindowOpened

    private void tblTaskHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTaskHistoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblTaskHistoryMouseClicked

    private void btnTaskHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaskHistoryActionPerformed
        tblTaskHistory.setModel(runnerController.loadData(runnerID, "Complete"));
        frmTaskHistory.setVisible(true);
        frmTaskHistory.setTitle("Task History");
        frmTaskHistory.setSize(new Dimension(600, 220));
        frmTaskHistory.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnTaskHistoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeliveryRunnerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeliveryRunnerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeliveryRunnerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeliveryRunnerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeliveryRunnerDashboard("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDays;
    private javax.swing.JButton btnManageTasks;
    private javax.swing.JButton btnMonths;
    private javax.swing.JButton btnTaskHistory;
    private javax.swing.JButton btnWeeks;
    private javax.swing.JFrame frmTaskHistory;
    private javax.swing.JFrame frmTaskManagement;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblRunnerID;
    private javax.swing.JLabel lblRunnerName;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlDashboard;
    private javax.swing.JPanel pnlGraph;
    private javax.swing.JPanel pnlNavigator;
    private javax.swing.JScrollPane scrlPnlReviews;
    private javax.swing.JTable tblTaskHistory;
    private javax.swing.JTable tblTasks;
    private javax.swing.JTextArea txtReviews;
    // End of variables declaration//GEN-END:variables

}
