package food_ordering_system.GUI;

import food_ordering_system.Utilities.GraphPanel;
import food_ordering_system.Controller.ManagerController;
import food_ordering_system.Utilities.LoginRedirect;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;

public class ManagerDashboard extends javax.swing.JFrame {
    private String timestamp = "Days";
    private GraphPanel vendorGraphPanel;
    private GraphPanel runnerGraphPanel;
    private final ManagerController managerController = new ManagerController();

    public ManagerDashboard(String managerID) {
        setTitle("Manager Interface");
        initComponents();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        new LoginRedirect().logout(this);
        pack();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblManagerTitle = new javax.swing.JLabel();
        pnlMonitorVendor = new javax.swing.JPanel();
        pnlSearchVendor = new javax.swing.JPanel();
        txtSearchVendor = new javax.swing.JTextField();
        btnSearchVendor = new javax.swing.JButton();
        pnlVendorRevenue = new javax.swing.JPanel();
        pnlButton = new javax.swing.JPanel();
        btnDays = new javax.swing.JButton();
        btnWeeks = new javax.swing.JButton();
        btnMonths = new javax.swing.JButton();
        pnlMonitorRunner = new javax.swing.JPanel();
        pnlSearchRunner = new javax.swing.JPanel();
        txtSearchRunner = new javax.swing.JTextField();
        btnSearchRunner = new javax.swing.JButton();
        pnlRunnerRating = new javax.swing.JPanel();
        pnlResolveCustomerComplaints = new javax.swing.JPanel();
        scrlPnlCustomerComplaints = new javax.swing.JScrollPane();
        txtCustomerComplaints = new javax.swing.JTextArea();
        btnRemoveVendorListings = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblManagerTitle.setText("Manager Interface (<managerID>)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        getContentPane().add(lblManagerTitle, gridBagConstraints);

        pnlMonitorVendor.setNextFocusableComponent(btnDays);
        pnlMonitorVendor.setPreferredSize(new java.awt.Dimension(400, 300));
        pnlMonitorVendor.setLayout(new javax.swing.BoxLayout(pnlMonitorVendor, javax.swing.BoxLayout.Y_AXIS));

        txtSearchVendor.setText("Enter Vendor ID");
        txtSearchVendor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchVendorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchVendorFocusLost(evt);
            }
        });

        btnSearchVendor.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://img.icons8.com/cotton/32/search--v2.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        btnSearchVendor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchVendorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchVendorLayout = new javax.swing.GroupLayout(pnlSearchVendor);
        pnlSearchVendor.setLayout(pnlSearchVendorLayout);
        pnlSearchVendorLayout.setHorizontalGroup(
            pnlSearchVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchVendorLayout.createSequentialGroup()
                .addComponent(txtSearchVendor, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSearchVendorLayout.setVerticalGroup(
            pnlSearchVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchVendorLayout.createSequentialGroup()
                .addGroup(pnlSearchVendorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearchVendor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchVendor, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlMonitorVendor.add(pnlSearchVendor);

        pnlVendorRevenue.setPreferredSize(new java.awt.Dimension(250, 230));
        pnlVendorRevenue.setLayout(new java.awt.BorderLayout());

        btnDays.setText("Days");
        btnDays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaysActionPerformed(evt);
            }
        });
        pnlButton.add(btnDays);

        btnWeeks.setText("Weeks");
        btnWeeks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWeeksActionPerformed(evt);
            }
        });
        pnlButton.add(btnWeeks);

        btnMonths.setText("Months");
        btnMonths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthsActionPerformed(evt);
            }
        });
        pnlButton.add(btnMonths);

        pnlVendorRevenue.add(pnlButton, java.awt.BorderLayout.PAGE_END);

        pnlMonitorVendor.add(pnlVendorRevenue);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlMonitorVendor, gridBagConstraints);

        pnlMonitorRunner.setPreferredSize(new java.awt.Dimension(400, 300));
        pnlMonitorRunner.setLayout(new javax.swing.BoxLayout(pnlMonitorRunner, javax.swing.BoxLayout.Y_AXIS));

        txtSearchRunner.setText("Enter Runner ID");
        txtSearchRunner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchRunnerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSearchRunnerFocusLost(evt);
            }
        });
        txtSearchRunner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchRunnerActionPerformed(evt);
            }
        });

        btnSearchRunner.setIcon(new javax.swing.JLabel() {
            public javax.swing.Icon getIcon() {
                try {
                    return new javax.swing.ImageIcon(
                        new java.net.URL("https://img.icons8.com/cotton/32/search--v2.png")
                    );
                } catch (java.net.MalformedURLException e) {
                }
                return null;
            }
        }.getIcon());
        btnSearchRunner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRunnerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchRunnerLayout = new javax.swing.GroupLayout(pnlSearchRunner);
        pnlSearchRunner.setLayout(pnlSearchRunnerLayout);
        pnlSearchRunnerLayout.setHorizontalGroup(
            pnlSearchRunnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchRunnerLayout.createSequentialGroup()
                .addComponent(txtSearchRunner, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchRunner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSearchRunnerLayout.setVerticalGroup(
            pnlSearchRunnerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtSearchRunner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(btnSearchRunner, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pnlMonitorRunner.add(pnlSearchRunner);

        pnlRunnerRating.setPreferredSize(new java.awt.Dimension(250, 230));
        pnlRunnerRating.setLayout(new java.awt.BorderLayout());
        pnlMonitorRunner.add(pnlRunnerRating);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlMonitorRunner, gridBagConstraints);

        pnlResolveCustomerComplaints.setPreferredSize(new java.awt.Dimension(400, 300));

        txtCustomerComplaints.setEditable(false);
        txtCustomerComplaints.setColumns(20);
        txtCustomerComplaints.setRows(5);
        txtCustomerComplaints.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomerComplaintsKeyPressed(evt);
            }
        });
        scrlPnlCustomerComplaints.setViewportView(txtCustomerComplaints);

        javax.swing.GroupLayout pnlResolveCustomerComplaintsLayout = new javax.swing.GroupLayout(pnlResolveCustomerComplaints);
        pnlResolveCustomerComplaints.setLayout(pnlResolveCustomerComplaintsLayout);
        pnlResolveCustomerComplaintsLayout.setHorizontalGroup(
            pnlResolveCustomerComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(pnlResolveCustomerComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scrlPnlCustomerComplaints, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        pnlResolveCustomerComplaintsLayout.setVerticalGroup(
            pnlResolveCustomerComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(pnlResolveCustomerComplaintsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(scrlPnlCustomerComplaints, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlResolveCustomerComplaints, gridBagConstraints);

        btnRemoveVendorListings.setText("Discard Vendor Item(s)");
        btnRemoveVendorListings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveVendorListingsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(btnRemoveVendorListings, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        updateVendorGraph(timestamp);
        updateRunnerGraph();
        loadComplaints();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        updateVendorGraph(timestamp);
        updateRunnerGraph();
        loadComplaints();
    }//GEN-LAST:event_formWindowActivated

    private void txtSearchRunnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchRunnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchRunnerActionPerformed

    private void updateVendorGraph(String newTimestamp) {
        this.timestamp = newTimestamp;
        List<Double> revenues = managerController.getVendorRevenues(timestamp, txtSearchVendor.getText());

        pnlVendorRevenue.removeAll();
        vendorGraphPanel = new GraphPanel(revenues, "Revenue (RM)", timestamp);
        pnlVendorRevenue.add(vendorGraphPanel, BorderLayout.CENTER);
        pnlVendorRevenue.add(pnlButton, BorderLayout.SOUTH);
        pnlVendorRevenue.revalidate();
        pnlVendorRevenue.repaint();
        SwingUtilities.invokeLater(() -> pnlVendorRevenue.requestFocusInWindow());
    }

    private void updateRunnerGraph(){
        List<Double> ratings = managerController.getRunnerRatings(txtSearchRunner.getText());

        pnlRunnerRating.removeAll();
        runnerGraphPanel = new GraphPanel(ratings, "Rating", "Time");
        pnlRunnerRating.add(runnerGraphPanel, BorderLayout.CENTER);
        pnlRunnerRating.revalidate();
        pnlRunnerRating.repaint();
        SwingUtilities.invokeLater(() -> pnlRunnerRating.requestFocusInWindow());
    }

    private void loadComplaints(){
        txtCustomerComplaints.setText("");
        txtCustomerComplaints.setEditable(true);
        List<String> complaints = managerController.getComplaints();
        StringBuilder sb = new StringBuilder();

        for (String complaint : complaints) {
            sb.append(complaint);
        }

        txtCustomerComplaints.setText(sb.toString());
        makeEditableOnlyReplies();
    }

    private void makeEditableOnlyReplies() {
        txtCustomerComplaints.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                int caretPos = txtCustomerComplaints.getCaretPosition();
                String text = txtCustomerComplaints.getText();

                // Find the start and end of the current line
                int lineStart = text.lastIndexOf("\n", caretPos - 1);
                int lineEnd = text.indexOf("\n", caretPos);
                if (lineEnd == -1) lineEnd = text.length();
                if (lineStart == -1) lineStart = 0;  // First line fix

                String currentLine = text.substring(lineStart, lineEnd).trim();

                // Allow editing only if the line starts with "->"
                if (!currentLine.startsWith("->")) {
                    if (e.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                        e.consume(); // Prevent input and removing characters
                    } else {
                        // If trying to delete outside editable area, stop it
                        if (caretPos <= lineStart + 3) { // Prevent deletion of "->"
                            e.consume();
                        }
                    }
                }
            }

            @Override
            public void keyTyped(KeyEvent e) {
                int caretPos = txtCustomerComplaints.getCaretPosition();
                String text = txtCustomerComplaints.getText();

                // Find the start and end of the current line
                int lineStart = text.lastIndexOf("\n", caretPos - 1);
                int lineEnd = text.indexOf("\n", caretPos);
                if (lineEnd == -1) lineEnd = text.length();
                if (lineStart == -1) lineStart = 0;  // First line fix

                String currentLine = text.substring(lineStart, lineEnd).trim();

                // Allow editing only if the line starts with "->"
                if (!currentLine.startsWith("->")) {
                    e.consume(); // Prevent input
                }
            }
        });
    }

    private void btnDaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaysActionPerformed
        updateVendorGraph("Days");
    }//GEN-LAST:event_btnDaysActionPerformed

    private void btnWeeksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWeeksActionPerformed
        updateVendorGraph("Weeks");
    }//GEN-LAST:event_btnWeeksActionPerformed

    private void btnMonthsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthsActionPerformed
        updateVendorGraph("Months");
    }//GEN-LAST:event_btnMonthsActionPerformed

    private void txtSearchVendorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchVendorFocusGained
        if(txtSearchVendor.getText().equals("Enter Vendor ID")){
            txtSearchVendor.setText("");
        }
    }//GEN-LAST:event_txtSearchVendorFocusGained

    private void txtSearchVendorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchVendorFocusLost
        if(txtSearchVendor.getText().isEmpty()){
            txtSearchVendor.setText("Enter Vendor ID");
        }
    }//GEN-LAST:event_txtSearchVendorFocusLost

    private void txtSearchRunnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchRunnerFocusGained
        if(txtSearchRunner.getText().equals("Enter Runner ID")){
            txtSearchRunner.setText("");
        }
    }//GEN-LAST:event_txtSearchRunnerFocusGained

    private void txtSearchRunnerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchRunnerFocusLost
        if(txtSearchRunner.getText().isEmpty()){
            txtSearchRunner.setText("Enter Runner ID");
        }
    }//GEN-LAST:event_txtSearchRunnerFocusLost

    private void btnSearchRunnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRunnerActionPerformed
        updateRunnerGraph();
    }//GEN-LAST:event_btnSearchRunnerActionPerformed

    private void btnSearchVendorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchVendorActionPerformed
        updateVendorGraph(timestamp);
    }//GEN-LAST:event_btnSearchVendorActionPerformed

    private void txtCustomerComplaintsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerComplaintsKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            List<String> updatedComplaints = List.of(txtCustomerComplaints.getText().split("\n\n"));
            managerController.updateComplaints(updatedComplaints);
            JOptionPane.showMessageDialog(this, "Replies saved successfully!");
        }
    }//GEN-LAST:event_txtCustomerComplaintsKeyPressed

    private void btnRemoveVendorListingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveVendorListingsActionPerformed
        JTextField itemIDField = new JTextField(10);
        JTextField vendorIDField = new JTextField(10);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(3, 2));
        panel.add(new JLabel("Item ID:"));
        panel.add(itemIDField);
        panel.add(new JLabel("Vendor ID:"));
        panel.add(vendorIDField);

        int result = JOptionPane.showConfirmDialog(null, panel, "Remove Vendor Listing", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            String itemID = itemIDField.getText();
            String vendorID = vendorIDField.getText();
            managerController.removeVendorItem(itemID, vendorID);
        } else {
            System.out.println("Operation cancelled.");
        }
    }//GEN-LAST:event_btnRemoveVendorListingsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDays;
    private javax.swing.JButton btnMonths;
    private javax.swing.JButton btnRemoveVendorListings;
    private javax.swing.JButton btnSearchRunner;
    private javax.swing.JButton btnSearchVendor;
    private javax.swing.JButton btnWeeks;
    private javax.swing.JLabel lblManagerTitle;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlMonitorRunner;
    private javax.swing.JPanel pnlMonitorVendor;
    private javax.swing.JPanel pnlResolveCustomerComplaints;
    private javax.swing.JPanel pnlRunnerRating;
    private javax.swing.JPanel pnlSearchRunner;
    private javax.swing.JPanel pnlSearchVendor;
    private javax.swing.JPanel pnlVendorRevenue;
    private javax.swing.JScrollPane scrlPnlCustomerComplaints;
    private javax.swing.JTextArea txtCustomerComplaints;
    private javax.swing.JTextField txtSearchRunner;
    private javax.swing.JTextField txtSearchVendor;
    // End of variables declaration//GEN-END:variables
}
